{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Problem 5.11\n",
    "\n",
    "Use this notebook to present your work on the problem.  If you write scripts, store them in this folder and run them within this notebook to produce the requested histograms and graphs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (a) Sums of random variables\n",
    "\n",
    "Write Python code to generate a histogram of 50,000 samples of a random variable $y = x_1 + x_2$ where $x_1$ and $x_2$ are random variables drawn from the uniform distribution over $[-1/2, 1/2]$.  Superimpose a plot of the expected probability distribution function for this variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1cc8f446fa0>]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from numpy.random import default_rng\n",
    "from numpy import random\n",
    "rng = default_rng()\n",
    "random = rng.random\n",
    "\n",
    "valueOne = 0.5-random(50000) # .5 - to get values from -1/2 to 1/2\n",
    "valueTwo = 0.5-random(50000)\n",
    "sumVal = valueOne + valueTwo\n",
    "array = np.linspace(-1,1,1001)\n",
    "function = 1000*np.exp(-3*array**2)\n",
    "plt.hist(sumVal, bins=200)\n",
    "plt.plot(array,function)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Write Python code to generate a histogram of 50,000 samples of a random variable $y = x_1 + x_2 + x_3 + x_4$ where $x_n$ are random variables drawn from the uniform distribution over $[-1/2, 1/2]$.  Superimpose a plot of the expected probability distribution function for this variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1cc8f6fb700>]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "valueOne    = 0.5-random(50000)\n",
    "valueTwo    = 0.5-random(50000)\n",
    "valueThree  = 0.5-random(50000)\n",
    "valueFour   = 0.5-random(50000)\n",
    "sumValTwo   = valueOne + valueTwo + valueThree + valueFour\n",
    "arrayTwo    = np.linspace(-1,1,1001)\n",
    "functionTwo = 1000*np.exp(-1.4*arrayTwo**2)\n",
    "plt.hist(sumValTwo, bins=200)\n",
    "plt.plot(arrayTwo, functionTwo)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (b) Sums of _more_ random variables\n",
    "\n",
    "Write Python code to generate a histogram of 50,000 samples of a random variable $y$ that is the sum of __10__ random variables drawn from the uniform distribution over $[-1/2, 1/2]$.  Superimpose a plot of the expected probability distribution function for this variable."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1cc8f96de80>]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "valueOne    = 0.5-random(50000)\n",
    "valueTwo    = 0.5-random(50000)\n",
    "valueThree  = 0.5-random(50000)\n",
    "valueFour   = 0.5-random(50000)\n",
    "valueFive   = 0.5-random(50000)\n",
    "valueSix    = 0.5-random(50000)\n",
    "valueSeven  = 0.5-random(50000)\n",
    "valueEight  = 0.5-random(50000)\n",
    "valueNine   = 0.5-random(50000)\n",
    "valueTen    = 0.5-random(50000)\n",
    "sumValThree  = valueOne + valueTwo + valueThree + valueFour + valueFive + valueSix + valueSeven + valueEight + valueNine + valueTen\n",
    "arrayThree = np.linspace(-1,1,1001)\n",
    "functionThree = 1000*np.exp(-1.4*arrayThree**2)\n",
    "plt.hist(sumValThree, bins=200)\n",
    "plt.plot(arrayThree, functionThree)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (c) Sums of nonuniform discrete random variables\n",
    "\n",
    "rite Python code to generate a histogram of 50,000 samples of a random variables $y$ that are the sum of __2__, __4__, and __10__ random variables drawn from the discrete distribution\n",
    "$$\n",
    "P(1) = \\dfrac{1}{3} \\qquad P(2) = \\dfrac{2}{9} \\qquad P(3) = \\dfrac{1}{9} \\qquad P(4) = \\dfrac{1}{3}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x1cc913e5a60>]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "valueOne    = 0.5-random(50000)\n",
    "valueTwo    = 0.5-random(50000)\n",
    "valueThree  = 0.5-random(50000)\n",
    "valueFour   = 0.5-random(50000)\n",
    "valueFive   = 0.5-random(50000)\n",
    "valueSix    = 0.5-random(50000)\n",
    "valueSeven  = 0.5-random(50000)\n",
    "valueEight  = 0.5-random(50000)\n",
    "valueNine   = 0.5-random(50000)\n",
    "valueTen    = 0.5-random(50000)\n",
    "sumValFour  = valueOne + valueTwo + valueThree + valueFour + valueFive + valueSix + valueSeven + valueEight + valueNine + valueTen\n",
    "sumValFive   = valueThree + valueSeven\n",
    "sumValSix   = valueTwo + valueTen + valueEight + valueFive\n",
    "arrayFour = np.linspace(-1,1,1001)\n",
    "functionFour = 1000*np.exp(-1.4*arrayFour**2)\n",
    "plt.hist(sumValFour, bins=200)\n",
    "plt.plot(arrayFour, functionFour)\n",
    "\n",
    "plt.hist(sumValFive , bins = 200)\n",
    "plt.plot(arrayFour, functionFour)\n",
    "\n",
    "plt.hist(sumValSix, bins=200)\n",
    "plt.plot(arrayFour, functionFour)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## (d) Sums of nonuniform continuous random variables\n",
    "\n",
    "Write Python code to generate a histogram of 50,000 samples of a random variables $y$ that are the sum of __5__ and __50__ random variables drawn from the exponential distribution with expectation 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'sumValF' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-16-29cea67814da>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[1;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[1;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m5\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     10\u001b[0m     \u001b[0mvalueTwo\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m0.5\u001b[0m\u001b[1;33m-\u001b[0m\u001b[0mrandom\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;36m50000\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 11\u001b[1;33m     \u001b[0msumValF\u001b[0m \u001b[1;33m+=\u001b[0m \u001b[0mvalueTwo\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     12\u001b[0m \u001b[0marray\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mlinspace\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m-\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m1\u001b[0m\u001b[1;33m,\u001b[0m\u001b[1;36m1001\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     13\u001b[0m \u001b[0mfunction\u001b[0m \u001b[1;33m=\u001b[0m \u001b[1;36m1000\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0mnp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mexp\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;33m-\u001b[0m\u001b[1;36m3\u001b[0m\u001b[1;33m*\u001b[0m\u001b[0marray\u001b[0m\u001b[1;33m**\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
      "\u001b[1;31mNameError\u001b[0m: name 'sumValF' is not defined"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "for i in range(50):\n",
    "    valueOne = 0.5-random(50000) \n",
    "    sumVal += valueOne\n",
    "array = np.linspace(-1,1,1001)\n",
    "function = 1000*np.exp(-3*array**2)\n",
    "plt.hist(sumVal, bins=200)\n",
    "plt.plot(array,function)\n",
    "\n",
    "for i in range(5):\n",
    "    valueTwo = 0.5-random(50000) \n",
    "    sumValF += valueTwo\n",
    "array = np.linspace(-1,1,1001)\n",
    "function = 1000*np.exp(-3*array**2)\n",
    "plt.hist(sumValF, bins=200)\n",
    "plt.plot(array,function)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summarize your findings."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
